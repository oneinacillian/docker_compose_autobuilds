apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
data:
  application.yml: |
    server:
      port: 8080
    
    spring:
      application:
        name: hyperion-gateway
      cloud:
        gateway:
          discovery:
            locator:
              enabled: true
              lower-case-service-id: true
          routes:
            # Hyperion API Routes
            - id: hyperion-api
              uri: lb://hyperion:7000
              predicates:
                - Path=/hyperion/**
              filters:
                - StripPrefix=1
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 100
                    redis-rate-limiter.burstCapacity: 200
                - name: CircuitBreaker
                  args:
                    name: hyperion-circuit-breaker
                    fallbackUri: forward:/fallback/hyperion
                - name: Retry
                  args:
                    retries: 3
                    statuses: BAD_GATEWAY,SERVICE_UNAVAILABLE
                    methods: GET,POST,PUT,DELETE
            
            # Elasticsearch API Routes
            - id: elasticsearch-api
              uri: lb://es1:9200
              predicates:
                - Path=/elasticsearch/**
              filters:
                - StripPrefix=1
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 50
                    redis-rate-limiter.burstCapacity: 100
                - name: CircuitBreaker
                  args:
                    name: elasticsearch-circuit-breaker
                    fallbackUri: forward:/fallback/elasticsearch
            
            # Kibana UI Routes
            - id: kibana-ui
              uri: lb://kibana:5601
              predicates:
                - Path=/kibana/**
              filters:
                - StripPrefix=1
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 200
                    redis-rate-limiter.burstCapacity: 400
            
            # RabbitMQ Management UI Routes
            - id: rabbitmq-management
              uri: lb://rabbitmq:15672
              predicates:
                - Path=/rabbitmq/**
              filters:
                - StripPrefix=1
                - name: RequestRateLimiter
                  args:
                    redis-rate-limiter.replenishRate: 30
                    redis-rate-limiter.burstCapacity: 60
            
            # Health Check Route
            - id: health-check
              uri: http://localhost:8080
              predicates:
                - Path=/health/**
              filters:
                - StripPrefix=1
            
            # API Documentation Route
            - id: api-docs
              uri: http://localhost:8080
              predicates:
                - Path=/docs/**
              filters:
                - StripPrefix=1
      
      # Redis Configuration for Rate Limiting
      redis:
        host: ${REDIS_HOST:localhost}
        port: ${REDIS_PORT:6379}
        timeout: 2000ms
        lettuce:
          pool:
            max-active: 8
            max-idle: 8
            min-idle: 0
    
    # Management Endpoints
    management:
      endpoints:
        web:
          exposure:
            include: health,info,gateway,circuitbreakers
      endpoint:
        health:
          show-details: always
    
    # Logging Configuration
    logging:
      level:
        org.springframework.cloud.gateway: DEBUG
        org.springframework.web.reactive: DEBUG
        reactor.netty: DEBUG
      pattern:
        console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    
    # Circuit Breaker Configuration
    resilience4j:
      circuitbreaker:
        instances:
          hyperion-circuit-breaker:
            sliding-window-size: 10
            failure-rate-threshold: 50
            wait-duration-in-open-state: 10s
            permitted-number-of-calls-in-half-open-state: 3
          elasticsearch-circuit-breaker:
            sliding-window-size: 10
            failure-rate-threshold: 50
            wait-duration-in-open-state: 10s
            permitted-number-of-calls-in-half-open-state: 3 