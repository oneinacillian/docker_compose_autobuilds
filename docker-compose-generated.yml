
version: '3'
services:
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: kibana
    environment:
      - "ELASTICSEARCH_URL=http://es1:9200"
      - "ELASTICSEARCH_HOSTS=http://es1:9200"
    ports:
      - "5601:5601"
    depends_on:
      - es1
    networks:
      - esnet
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - esnet
    volumes:
      - redisdata:/data
    command: redis-server --appendonly yes --supervised systemd --maxmemory 10gb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    build:
      context: ./rabbitmq/Deployment
      dockerfile: Dockerfile.rabbitmq  
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=rabbitmquser
      - RABBITMQ_DEFAULT_PASS=rabbitmqpass
      - RABBITMQ_DEFAULT_VHOST=hyperion
    command:
      - sh
      - -c
      - |
        rabbitmq-plugins disable --all &&
        rabbitmq-plugins enable rabbitmq_management &&
        rabbitmq-server  
    ports:
      - "127.0.0.1:5672:5672"
      - "127.0.0.1:15672:15672"
    networks:
      - esnet
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
      - ./rabbitmq/Deployment/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/Deployment/rabbitmq-env.conf:/etc/rabbitmq/rabbitmq-env.conf   
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  hyperion:
    container_name: hyperion
    tty: true
    build:
      context: ./hyperion/Deployment
      dockerfile: Dockerfile.hyperion
      args:
        - HYPERION_ENVIRONMENT=testnet
        - HYPERION_LAUNCH_ON_STARTUP=false
        - HYPERION_VERSION=v3.3.10-1
        - RABBITMQ_DEFAULT_USER=rabbitmquser
        - RABBITMQ_DEFAULT_PASS=rabbitmqpass
    ports:
      - "127.0.0.1:7000:7000"
      - "127.0.0.1:1234:1234"
    networks:
      - esnet
    volumes:
      - hyperiondata:/app/hyperiondata
    depends_on:
      - redis
      - rabbitmq
      - es1

  node:
    container_name: node
    tty: true
    build:
      context: ./hyperion/Deployment
      dockerfile: Dockerfile.node
      args:
        - HYPERION_ENVIRONMENT=testnet
        - HYPERION_LAUNCH_ON_STARTUP=false
        - LEAP_FILE=https://apt.eossweden.org/wax/pool/stable/w/wax-leap-404wax01/wax-leap-404wax01_4.0.4wax01-ubuntu-18.04_amd64.deb
        - LEAP_DEB_FILE=wax-leap-404wax01_4.0.4wax01-ubuntu-18.04_amd64.deb
    ports:
      - "127.0.0.1:9876:9876"
      - "127.0.0.1:8888:8888"
    networks:
      - esnet
    volumes:
      - node:/app/node/data

  es1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: es1
    environment:
      - "node.name=es1"
      - "cluster.name=es-docker-cluster"
      - "cluster.initial_master_nodes=es1,es2"
      - "discovery.seed_hosts=es1,es2"
      - "ES_JAVA_OPTS=-Xms15g -Xmx15g"
      - "xpack.security.enabled=false"
      - "xpack.monitoring.collection.enabled=true"
      - "bootstrap.memory_lock=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    networks:
      - esnet

  es2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: es2
    environment:
      - "node.name=es2"
      - "cluster.name=es-docker-cluster"
      - "cluster.initial_master_nodes=es1,es2"
      - "discovery.seed_hosts=es1,es2"
      - "ES_JAVA_OPTS=-Xms15g -Xmx15g"
      - "xpack.security.enabled=false"
      - "xpack.monitoring.collection.enabled=true"
      - "bootstrap.memory_lock=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    networks:
      - esnet

volumes:
  redisdata:
  rabbitmqdata:
  hyperiondata:
  node:
  esdata1:
  esdata2:

networks:
  esnet:
